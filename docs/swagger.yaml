basePath: /api
definitions:
  dto.BookingRequest:
    properties:
      price:
        type: number
      service_id:
        type: integer
      user_id:
        type: integer
    required:
    - price
    - service_id
    - user_id
    type: object
  dto.BookingResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      price:
        type: number
      service_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  dto.SwaggerResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: Booking system API with Fiber framework
  title: Fiber Booking System API
  version: "1.0"
paths:
  /bookings:
    get:
      consumes:
      - application/json
      description: Get all bookings with optional sorting and filtering
      parameters:
      - description: Sort by (price or date)
        in: query
        name: sort
        type: string
      - description: Filter high value bookings
        in: query
        name: high-value
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SwaggerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.BookingResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all bookings
      tags:
      - bookings
    post:
      consumes:
      - application/json
      description: Create a new booking with user_id, service_id, and price
      parameters:
      - description: Booking Request
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/dto.BookingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SwaggerResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BookingResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new booking
      tags:
      - bookings
  /bookings/{id}:
    delete:
      consumes:
      - application/json
      description: Cancel an existing booking by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SwaggerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Cancel a booking
      tags:
      - bookings
    get:
      consumes:
      - application/json
      description: Get booking details by ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SwaggerResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BookingResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a booking by ID
      tags:
      - bookings
swagger: "2.0"
